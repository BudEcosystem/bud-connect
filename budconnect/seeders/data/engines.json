[
    {
        "name": "vllm",
        "versions": [
            {
                "version": "0.4.0",
                "device_architecture": "CUDA",
                "container_image": "budstudio/vllm-cuda:0.4.0",
                "compatibilities": [
                    {
                        "architecture": [
                            "AquilaForCausalLM",
                            "AquilaModel",
                            "ArceeForCausalLM",
                            "ArcticForCausalLM",
                            "AriaForConditionalGeneration",
                            "AyaVisionForConditionalGeneration",
                            "BaiChuanForCausalLM",
                            "BaichuanForCausalLM",
                            "BailingMoeForCausalLM",
                            "BambaForCausalLM",
                            "BartForConditionalGeneration",
                            "BartModel",
                            "BertForSequenceClassification",
                            "BertModel",
                            "Blip2ForConditionalGeneration",
                            "BloomForCausalLM",
                            "ChameleonForConditionalGeneration",
                            "ChatGLMForConditionalGeneration",
                            "ChatGLMModel",
                            "Cohere2ForCausalLM",
                            "Cohere2VisionForConditionalGeneration",
                            "CohereForCausalLM",
                            "DbrxForCausalLM",
                            "DeciLMForCausalLM",
                            "DeepSeekMTPModel",
                            "DeepseekForCausalLM",
                            "DeepseekV2ForCausalLM",
                            "DeepseekV3ForCausalLM",
                            "DeepseekVLV2ForCausalLM",
                            "Dots1ForCausalLM",
                            "Eagle3LlamaForCausalLM",
                            "EagleDeepSeekMTPModel",
                            "EagleLlama4ForCausalLM",
                            "EagleLlamaForCausalLM",
                            "EagleMiniCPMForCausalLM",
                            "Ernie4_5ForCausalLM",
                            "Ernie4_5_MoeForCausalLM",
                            "ErnieMTPModel",
                            "Exaone4ForCausalLM",
                            "ExaoneForCausalLM",
                            "Fairseq2LlamaForCausalLM",
                            "FalconForCausalLM",
                            "FalconH1ForCausalLM",
                            "FalconMambaForCausalLM",
                            "Florence2ForConditionalGeneration",
                            "FuyuForCausalLM",
                            "GLM4VForCausalLM",
                            "GPT2ForSequenceClassification",
                            "GPT2LMHeadModel",
                            "GPTBigCodeForCausalLM",
                            "GPTJForCausalLM",
                            "GPTNeoXForCausalLM",
                            "Gemma2ForCausalLM",
                            "Gemma2Model",
                            "Gemma3ForCausalLM",
                            "Gemma3ForConditionalGeneration",
                            "Gemma3nForCausalLM",
                            "Gemma3nForConditionalGeneration",
                            "GemmaForCausalLM",
                            "Glm4ForCausalLM",
                            "Glm4MoeForCausalLM",
                            "Glm4MoeMTPModel",
                            "Glm4vForConditionalGeneration",
                            "Glm4vMoeForConditionalGeneration",
                            "GlmForCausalLM",
                            "GptOssForCausalLM",
                            "GraniteForCausalLM",
                            "GraniteMoeForCausalLM",
                            "GraniteMoeHybridForCausalLM",
                            "GraniteMoeSharedForCausalLM",
                            "GraniteSpeechForConditionalGeneration",
                            "GritLM",
                            "Grok1ModelForCausalLM",
                            "GteModel",
                            "GteNewModel",
                            "H2OVLChatModel",
                            "HCXVisionForCausalLM",
                            "HunYuanDenseV1ForCausalLM",
                            "HunYuanMoEV1ForCausalLM",
                            "Idefics3ForConditionalGeneration",
                            "InternLM2ForCausalLM",
                            "InternLM2ForRewardModel",
                            "InternLM2VEForCausalLM",
                            "InternLM3ForCausalLM",
                            "InternLMForCausalLM",
                            "InternS1ForConditionalGeneration",
                            "InternVLChatModel",
                            "JAISLMHeadModel",
                            "JambaForCausalLM",
                            "JambaForSequenceClassification",
                            "JinaVLForRanking",
                            "KeyeForConditionalGeneration",
                            "KimiVLForConditionalGeneration",
                            "LLaMAForCausalLM",
                            "Lfm2ForCausalLM",
                            "Llama4ForCausalLM",
                            "Llama4ForConditionalGeneration",
                            "LlamaForCausalLM",
                            "LlamaForCausalLMEagle3",
                            "LlamaModel",
                            "Llama_Nemotron_Nano_VL",
                            "LlavaForConditionalGeneration",
                            "LlavaNextForConditionalGeneration",
                            "LlavaNextVideoForConditionalGeneration",
                            "LlavaOnevisionForConditionalGeneration",
                            "MBartForConditionalGeneration",
                            "MLPSpeculatorPreTrainedModel",
                            "MPTForCausalLM",
                            "Mamba2ForCausalLM",
                            "MambaForCausalLM",
                            "MantisForConditionalGeneration",
                            "MedusaModel",
                            "MiMoForCausalLM",
                            "MiMoMTPModel",
                            "MiniCPM3ForCausalLM",
                            "MiniCPMForCausalLM",
                            "MiniCPMO",
                            "MiniCPMV",
                            "MiniMaxForCausalLM",
                            "MiniMaxM1ForCausalLM",
                            "MiniMaxText01ForCausalLM",
                            "MiniMaxVL01ForConditionalGeneration",
                            "Mistral3ForConditionalGeneration",
                            "MistralForCausalLM",
                            "MixtralForCausalLM",
                            "MllamaForConditionalGeneration",
                            "ModernBertForSequenceClassification",
                            "MolmoForCausalLM",
                            "MptForCausalLM",
                            "NVLM_D",
                            "NemotronForCausalLM",
                            "NemotronHForCausalLM",
                            "OPTForCausalLM",
                            "Olmo2ForCausalLM",
                            "OlmoForCausalLM",
                            "OlmoeForCausalLM",
                            "OrionForCausalLM",
                            "Ovis",
                            "Ovis2_5",
                            "PaliGemmaForConditionalGeneration",
                            "PersimmonForCausalLM",
                            "Phi3ForCausalLM",
                            "Phi3VForCausalLM",
                            "Phi4FlashForCausalLM",
                            "Phi4MMForCausalLM",
                            "Phi4MultimodalForCausalLM",
                            "PhiForCausalLM",
                            "PhiMoEForCausalLM",
                            "PixtralForConditionalGeneration",
                            "Plamo2ForCausalLM",
                            "QWenLMHeadModel",
                            "QuantMixtralForCausalLM",
                            "Qwen2AudioForConditionalGeneration",
                            "Qwen2ForCausalLM",
                            "Qwen2MoeForCausalLM",
                            "Qwen2VLForConditionalGeneration",
                            "Qwen2_5OmniForConditionalGeneration",
                            "Qwen2_5OmniModel",
                            "Qwen2_5_VLForConditionalGeneration",
                            "Qwen3ForCausalLM",
                            "Qwen3MoeForCausalLM",
                            "QwenVLForConditionalGeneration",
                            "RForConditionalGeneration",
                            "RWForCausalLM",
                            "RobertaForSequenceClassification",
                            "SkyworkR1VChatModel",
                            "SmolVLMForConditionalGeneration",
                            "SolarForCausalLM",
                            "StableLMEpochForCausalLM",
                            "StableLmForCausalLM",
                            "Starcoder2ForCausalLM",
                            "Step3TextForCausalLM",
                            "Step3VLForConditionalGeneration",
                            "Tarsier2ForConditionalGeneration",
                            "TarsierForConditionalGeneration",
                            "TeleChat2ForCausalLM",
                            "TeleFLMForCausalLM",
                            "UltravoxModel",
                            "VoxtralForConditionalGeneration",
                            "WhisperForConditionalGeneration",
                            "XLMRobertaForSequenceClassification",
                            "XverseForCausalLM",
                            "Zamba2ForCausalLM"
                          ],
                        "features": []
                    }
                ],
                "parser_rules": [
                    {
                        "parser_type": "hermes",
                        "match_type": "prefix",
                        "pattern": "NousResearch/Hermes-2-Pro-",
                        "priority": 0,
                        "enabled": true,
                        "notes": "Theta variants may produce lower-quality tool calls"
                    },
                    {
                        "parser_type": "hermes",
                        "match_type": "prefix",
                        "pattern": "NousResearch/Hermes-2-Theta-",
                        "priority": 0,
                        "enabled": true,
                        "notes": "Theta variants may produce lower-quality tool calls"
                    },
                    {
                        "parser_type": "hermes",
                        "match_type": "prefix",
                        "pattern": "NousResearch/Hermes-3-",
                        "priority": 0,
                        "enabled": true,
                        "notes": "Theta variants may produce lower-quality tool calls"
                    },
                    {
                        "parser_type": "llama3_json",
                        "match_type": "prefix",
                        "pattern": "meta-llama/Llama-3.1-",
                        "priority": 0,
                        "enabled": true,
                        "notes": "",
                        "chat_template": "examples/tool_chat_template_llama3.1_json.jinja"
                    },
                    {
                        "parser_type": "llama3_json",
                        "match_type": "prefix",
                        "pattern": "meta-llama/Llama-3.2-",
                        "priority": 0,
                        "enabled": true,
                        "notes": "",
                        "chat_template": "examples/tool_chat_template_llama3.2_json.jinja"
                    },
                    {
                        "parser_type": "llama4_pythonic",
                        "match_type": "prefix",
                        "pattern": "meta-llama/Llama-4-",
                        "priority": 0,
                        "enabled": true,
                        "notes": "",
                        "chat_template": "examples/tool_chat_template_llama4_pythonic.jinja"
                    }
                ]
            },
            {
                "version": "0.1.0",
                "device_architecture": "CPU",
                "container_image": "budstudio/vllm-cpu:0.1.0",
                "compatibilities": [
                    {
                        "architecture": ["AquilaModel", "AquilaForCausalLM", "ArcticForCausalLM", "MiniMaxText01ForCausalLM", "BaiChuanForCausalLM", "BaichuanForCausalLM", "BambaForCausalLM", "BloomForCausalLM", "ChatGLMModel", "ChatGLMForConditionalGeneration", "CohereForCausalLM", "Cohere2ForCausalLM", "DbrxForCausalLM", "DeciLMForCausalLM", "DeepseekForCausalLM", "DeepseekV2ForCausalLM", "DeepseekV3ForCausalLM", "ExaoneForCausalLM", "FalconForCausalLM", "Fairseq2LlamaForCausalLM", "GemmaForCausalLM", "Gemma2ForCausalLM", "Gemma3ForCausalLM", "GlmForCausalLM", "Glm4ForCausalLM", "GPT2LMHeadModel", "GPTBigCodeForCausalLM", "GPTJForCausalLM", "GPTNeoXForCausalLM", "GraniteForCausalLM", "GraniteMoeForCausalLM", "GraniteMoeHybridForCausalLM", "GraniteMoeSharedForCausalLM", "GritLM", "Grok1ModelForCausalLM", "InternLMForCausalLM", "InternLM2ForCausalLM", "InternLM2VEForCausalLM", "InternLM3ForCausalLM", "JAISLMHeadModel", "JambaForCausalLM", "LlamaForCausalLM", "LLaMAForCausalLM", "MambaForCausalLM", "FalconMambaForCausalLM", "Mamba2ForCausalLM", "MiniCPMForCausalLM", "MiniCPM3ForCausalLM", "MistralForCausalLM", "MixtralForCausalLM", "QuantMixtralForCausalLM", "MptForCausalLM", "MPTForCausalLM", "NemotronForCausalLM", "OlmoForCausalLM", "Olmo2ForCausalLM", "OlmoeForCausalLM", "OPTForCausalLM", "OrionForCausalLM", "PersimmonForCausalLM", "PhiForCausalLM", "Phi3ForCausalLM", "Phi3SmallForCausalLM", "PhiMoEForCausalLM", "Plamo2ForCausalLM", "QWenLMHeadModel", "Qwen2ForCausalLM", "Qwen2MoeForCausalLM", "Qwen3ForCausalLM", "Qwen3MoeForCausalLM", "RWForCausalLM", "StableLMEpochForCausalLM", "StableLmForCausalLM", "Starcoder2ForCausalLM", "SolarForCausalLM", "TeleChat2ForCausalLM", "TeleFLMForCausalLM", "XverseForCausalLM", "Zamba2ForCausalLM", "BartModel", "BartForConditionalGeneration", "BertModel", "Gemma2Model", "GteModel", "InternLM2ForRewardModel", "JambaForSequenceClassification", "LlamaModel", "MistralModel", "NomicBertModel", "Qwen2Model", "Qwen2ForRewardModel", "Qwen2ForProcessRewardModel", "RobertaForMaskedLM", "RobertaModel", "XLMRobertaModel", "LlavaNextForConditionalGeneration", "Phi3VForCausalLM", "Qwen2VLForConditionalGeneration", "Qwen2ForSequenceClassification", "PrithviGeoSpatialMAE", "BertForSequenceClassification", "RobertaForSequenceClassification", "XLMRobertaForSequenceClassification", "ModernBertForSequenceClassification", "AriaForConditionalGeneration", "AyaVisionForConditionalGeneration", "Blip2ForConditionalGeneration", "ChameleonForConditionalGeneration", "DeepseekVLV2ForCausalLM", "FuyuForCausalLM", "Gemma3ForConditionalGeneration", "GLM4VForCausalLM", "GraniteSpeechForConditionalGeneration", "H2OVLChatModel", "InternVLChatModel", "Idefics3ForConditionalGeneration", "SmolVLMForConditionalGeneration", "KimiVLForConditionalGeneration", "LlavaForConditionalGeneration", "LlavaNextVideoForConditionalGeneration", "LlavaOnevisionForConditionalGeneration", "MantisForConditionalGeneration", "MiniMaxVL01ForConditionalGeneration", "MiniCPMO", "MiniCPMV", "Mistral3ForConditionalGeneration", "MolmoForCausalLM", "NVLM_D", "Ovis2ForConditionalGeneration", "PaliGemmaForConditionalGeneration", "PixtralForConditionalGeneration", "QwenVLForConditionalGeneration", "Qwen2_5_VLForConditionalGeneration", "Qwen2AudioForConditionalGeneration", "Qwen2_5OmniModel", "UltravoxModel", "Phi4MMForCausalLM", "Florence2ForConditionalGeneration", "MllamaForConditionalGeneration", "Llama4ForConditionalGeneration", "SkyworkR1VChatModel", "WhisperForConditionalGeneration", "EAGLEModel", "EagleLlamaForCausalLM", "Eagle3LlamaForCausalLM", "DeepSeekMTPModel", "MedusaModel", "MLPSpeculatorPreTrainedModel", "TransformersForCausalLM"],
                        "features": []
                    }
                ]
            }
        ]
    },
    {
        "name": "LiteLLM",
        "versions": [
            {
                "version": "0.1.0",
                "device_architecture": "CPU",
                "container_image": "budstudio/litellm-cpu:0.1.0",
                "compatibilities": []
            }
        ]
    },
    {
        "name": "TensorZero",
        "versions": [
            {
                "version": "0.1.0",
                "device_architecture": "CPU",
                "container_image": "budstudio/budproxy:0.4.0",
                "compatibilities": []
            }
        ]
    }
]
