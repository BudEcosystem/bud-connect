"""add_model_capabilities_and_architecture_support

Revision ID: d9b4b3120a93
Revises: 6c82a81a1806
Create Date: 2025-09-19 07:00:37.527776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import ColumnType
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd9b4b3120a93'
down_revision: Union[str, None] = '6c82a81a1806'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_architecture_class',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('architecture_family', sa.String(), nullable=False),
    sa.Column('tool_calling_parser_type', sa.String(), nullable=True),
    sa.Column('reasoning_parser_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_name')
    )
    op.create_table('model_capability',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('model_info_id', sa.UUID(), nullable=False),
    sa.Column('engine_version_id', sa.UUID(), nullable=False),
    sa.Column('tool_calling_enabled', sa.Boolean(), nullable=False),
    sa.Column('tool_calling_parser_type', sa.String(), nullable=True),
    sa.Column('reasoning_parser_enabled', sa.Boolean(), nullable=False),
    sa.Column('reasoning_parser_type', sa.String(), nullable=True),
    sa.Column('compatibility_notes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['engine_version_id'], ['engine_version.id'], ),
    sa.ForeignKeyConstraint(['model_info_id'], ['model_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('engine_compatibility', sa.Column('supported_tool_calling_parser_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('engine_compatibility', sa.Column('supported_reasoning_parsers', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.sync_enum_values(
        enum_schema='public',
        enum_name='providercapabilityenum',
        new_values=['MODEL', 'MODERATION', 'LOCAL'],
        affected_columns=[TableReference(table_schema='public', table_name='provider', column_name='capabilities', column_type=ColumnType.ARRAY)],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema='public',
        enum_name='modelendpointenum',
        new_values=['CHAT', 'COMPLETION', 'IMAGE_GENERATION', 'IMAGE_EDIT', 'IMAGE_VARIATION', 'AUDIO_TRANSCRIPTION', 'AUDIO_TRANSLATION', 'AUDIO_SPEECH', 'EMBEDDING', 'BATCH', 'RESPONSE', 'DOCUMENT', 'RERANK', 'MODERATION'],
        affected_columns=[TableReference(table_schema='public', table_name='model_info', column_name='endpoints', column_type=ColumnType.ARRAY)],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='public',
        enum_name='modelendpointenum',
        new_values=['CHAT', 'COMPLETION', 'IMAGE_GENERATION', 'AUDIO_TRANSCRIPTION', 'AUDIO_SPEECH', 'EMBEDDING', 'BATCH', 'RESPONSE', 'RERANK', 'MODERATION', '/v1/audio/translations', '/v1/documents', '/v1/images/edits', '/v1/images/variations', 'AUDIO_TRANSLATION', 'DOCUMENT', 'IMAGE_EDIT', 'IMAGE_VARIATION'],
        affected_columns=[TableReference(table_schema='public', table_name='model_info', column_name='endpoints', column_type=ColumnType.ARRAY)],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema='public',
        enum_name='providercapabilityenum',
        new_values=['MODEL', 'MODERATION'],
        affected_columns=[TableReference(table_schema='public', table_name='provider', column_name='capabilities', column_type=ColumnType.ARRAY)],
        enum_values_to_rename=[],
    )
    op.drop_column('engine_compatibility', 'supported_reasoning_parsers')
    op.drop_column('engine_compatibility', 'supported_tool_calling_parser_types')
    op.drop_table('model_capability')
    op.drop_table('model_architecture_class')
    # ### end Alembic commands ###
