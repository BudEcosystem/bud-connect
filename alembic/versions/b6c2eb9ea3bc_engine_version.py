"""engine version

Revision ID: b6c2eb9ea3bc
Revises: 
Create Date: 2025-05-08 14:04:20.101561

"""
from typing import Sequence, Union

from alembic import op  # type: ignore
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b6c2eb9ea3bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('engine',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('workflow_name', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('input', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('output', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error', sa.String(length=255), nullable=True),
    sa.Column('notification_status', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('num_retries', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workflow_id')
    )
    op.create_table('engine_version',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('engine_id', sa.UUID(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('container_image', sa.String(), nullable=False),
    sa.Column('device_architecture', sa.Enum('CUDA', 'ROCM', 'CPU', 'HPU', name='devicearchitecture'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['engine_id'], ['engine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_steps',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('step_id', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notification_status', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('num_retries', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow_runs.workflow_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('engine_compatibility',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('engine_version_id', sa.UUID(), nullable=False),
    sa.Column('architectures', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('features', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['engine_version_id'], ['engine_version.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('engine_version_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('engine_compatibility')
    op.drop_table('workflow_steps')
    op.drop_table('engine_version')
    op.drop_table('workflow_runs')
    op.drop_table('engine')
    # ### end Alembic commands ###
